@page "/product/delete/{id:int}"
@using InventoryManager.Application.Services;
@using InventoryManager.Domain.Entities
@inject NavigationManager NavManager;
@attribute [Authorize(Roles = "Administrator")]

<div class="form-container delete-product-container">
    <div class="container-fluid card form-sub-container mt-5 p-5">
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-trash3 me-3 ms-3" viewBox="0 0 16 16" style="color: red">
            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z" />
        </svg>
        <h1 class="mt-3 mb-3 ms-2">Delete product</h1>
        <EditForm Model="_product">
            <div class="form-group">
                <strong>Reference</strong><br />              
                <label>@_product!.Id</label>
            </div>
            <div class="form-group">
                <strong>Name</strong><br />              
                <label>@_product.Name</label>
            </div>
            <div class="form-group mt-2 mb-2">
                <strong class="delete-product-warning">Are you sure you want to delete this product?</strong>
            </div>
            <a href="/product" class="button btn btn-danger">Cancel</a>
            <button type="button" class="btn btn-success" @onclick="DeleteProduct">Delete product</button>
        </EditForm>
    </div>
</div>
@inject ProductService ProductService;
@code {

    [Parameter]
    public int id { get; set; }

    private Product? _product = new();

    protected override async Task OnInitializedAsync()
    {
        _product = await ProductService.GetProduct(id);
    }

    private async void DeleteProduct()
    {
        await ProductService.DeleteProduct(_product!);
        NavManager.NavigateTo("/product");
    }
}
