@page "/product/edit"
@page "/product/edit/{id:int}"
@using InventoryManager.Application.Services;
@using InventoryManager.Domain.Entities
@inject NavigationManager NavManager;
@attribute [Authorize(Roles = "Administrator")]

<div>
        <EditForm Model="_product">
            <div class="form-group">
                <label>Reference:</label>
            <InputNumber @bind-Value="_product.Id" class="form-control"></InputNumber>
            </div>
            <div class="form-group">
                <label>Name:</label>
                <InputText @bind-Value="_product.Name" class="form-control"></InputText>
            </div>
            <div class="form-group">
                <label>Description</label>
                <InputText @bind-Value="_product.Description" class="form-control"></InputText>
            </div>
            <div class="form-group">
                <label>Category:</label>
                <InputSelect @bind-Value="_product.CategoryId" class="form-control">
                    @foreach (var category in _categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </InputSelect>
            </div>
            <button type="button" class="btn btn-primary" @onclick="SaveProduct">Update product</button>
        </EditForm>
</div>

@inject ProductService ProductService;
@inject CategoryService CategoryService;
@code {

    [Parameter]
    public int id { get; set; }

    private Product _product = new();
    private List<Category> _categories = new();

    protected override async Task OnInitializedAsync()
    {
        _product = await ProductService.FindItem(id);          
        _categories = await CategoryService.ItemList();
    }

    private async void SaveProduct()
    {
        await ProductService.UpdateItem(_product);
        NavManager.NavigateTo("/");
    }
}
