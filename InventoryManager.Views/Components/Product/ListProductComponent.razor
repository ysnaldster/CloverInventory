@using InventoryManager.Application.Services
@using InventoryManager.Domain.Entities
@inject ProductService ProductService
@inject CategoryService CategoryService;
@attribute [Authorize(Roles = "Administrator")]
@inject IJSRuntime js

<div class="container-fluid m-0 pt-3 pb-3">
    <div class="row list-products-sub-container">
        <h1 class="p-0 mb-3">Available products</h1>                
        <AuthorizeView Roles="Administrator">
            <Authorized>
                <div class="col-4 m-0 p-0">
                    <button type="button" class="button btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        Add product
                    </button>
                    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16" style="color: green">
                                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z" />
                                    </svg>
                                    <h1 class="modal-title fs-5 ms-3" id="exampleModalLabel">Create product</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="main-container-form-create">
                                        <EditForm Model="_product" Context="productFormContext">
                                            <div class="form-group">
                                                <strong>Reference</strong>
                                                <InputNumber @bind-Value="_product.Id" class="form-control"></InputNumber>
                                            </div>
                                            <div class="form-group">
                                                <strong>Name:</strong>
                                                <InputText @bind-Value="_product.Name" class="form-control"></InputText>
                                            </div>
                                            <div class="form-group mb-2 pb-2">
                                                <strong>Description</strong>
                                                <InputText @bind-Value="_product.Description" class="form-control"></InputText>
                                            </div>
                                            <div class="form-group">
                                                <strong>Category</strong>
                                                <InputSelect @bind-Value="_product.CategoryId" class="form-control pt-2 mt-3">
                                                    <option>Select a category</option>
                                                    @foreach (var category in _categories)
                                                    {
                                                        <option value="@category.Id">@category.Name</option>
                                                    }
                                                </InputSelect>
                                            </div>
                                        </EditForm>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-success" @onclick="SaveProduct">Add Product</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>   
            </Authorized>
            <NotAuthorized>
                <InfoAlertProductComponent></InfoAlertProductComponent>          
            </NotAuthorized>
        </AuthorizeView>
        <div class="col-8 pb-4 pe-0 ps-0 list-products-selected-categories-container">
            <div class="list-products-selected-categories-subcontainer">
                <button @onclick="@OnInitializedAsync" class="btn btn-primary me-3">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z" />
                        <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z" />
                    </svg>
                </button>
                <select class="form-select" @onchange="@CategoryChanged">
                    <option value="">Select a category</option>
                    @foreach (var category in _categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>
        </div>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th>Actions</th>
                    <th>Reference</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Quantity</th>
                    <th>Category</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in _temporalProducts)
                {
                    <tr>
                        <td>
                            <AuthorizeView>
                                <Authorized>
                                    <a href="/product/edit/@product.Id" class = "pe-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                        <title>Edit</title>
                                        </svg>                                    
                                    </a>                                 
                                    <a href="/product/delete/@product.Id">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16" style =" color: red ">
                                            <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z" />
                                        <title>Delete</title>
                                        </svg>
                                    </a>
                                </Authorized>
                                <NotAuthorized>                                    
                                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-exclamation-triangle icon-warning-products-actions" viewBox="0 0 16 16">
                                        <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z" />
                                        <path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z" />
                                    <title>
                                         You are not authorized to perform actions
                                    </title>
                                    </svg>                                  
                                </NotAuthorized>
                            </AuthorizeView>
                        </td>
                        <td>@product.Id</td>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.TotalQuantity</td>
                        <td>@product.Category!.Name</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Product> _products = new ();
    private List<Product> _temporalProducts = new ();
    public List<Category> _categories = new();
    private Product _product = new();
    private const string MessageCreated = "Product created, please refresh the table", InvokeType = "alert";

    /// <summary>
    ///  Initialized for get products and categories list.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        _products = await ProductService.GetProductsList();
        _temporalProducts = _products;
        _categories = await CategoryService.GetCategories();
    }

    //Capture the event brought by the form
    private void CategoryChanged(ChangeEventArgs e)
    {
        _temporalProducts = _products!.Where(p => p.CategoryId.ToString() == e.Value!.ToString()).ToList();
    }

    private async void SaveProduct()
    {
        await ProductService.CreateProduct(_product);
        await js.InvokeVoidAsync(InvokeType, MessageCreated);
    }
}